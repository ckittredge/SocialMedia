var underscore=angular.module("underscore",[]);underscore.factory("_",["$window",function(a){return a._}]),angular.module("NewsFeed",["underscore"]),angular.module("SideMenu",["underscore"]),angular.module("Widgets",["underscore","NewsFeed"]),angular.module("AppUsers",[]);var app=angular.module("SocialMediaApp",["ui.router","underscore","NewsFeed","SideMenu","Widgets","AppUsers"]);app.config(["$stateProvider","$urlRouterProvider",function(a,b){b.otherwise("/"),a.state("NewsFeed",{url:"/",views:{SideMenu:{templateUrl:"app/sideMenu/partials/sideMenu.tpl.html",controller:"SideMenuController"},MainView:{templateUrl:"app/newsFeed/partials/newsFeed.tpl.html",controller:"NewsFeedController"}}}).state("FriendsList",{url:"/Friends",views:{SideMenu:{templateUrl:"app/sideMenu/partials/sideMenu.tpl.html",controller:"SideMenuController"},MainView:{templateUrl:"app/users/partials/friendsList.tpl.html",controller:"FriendsListController"}}})}]),app.controller("MainController",["$scope","$window","$state","appUserDataService",function(a,b,c,d){function e(){c.go("NewsFeed")}a.main={},d.getCurrentUser().then(function(c){if(!c.success||null==c||null==c.data||null==c.data.data)throw"Current user is null";a.main.currentUser=b.currentUser=c.data.data,a.$broadcast("currentUserSet",c.data.data)}),e()}]),angular.module("NewsFeed").controller("NewsFeedController",["$scope","newsFeedDataService","NEWS_FEED_TYPES",function(a,b,c){function d(){a.newsFeed.getNewsFeedItems()}a.newsFeed={items:[]},a.newsFeed.getNewsFeedItems=function(){b.getNewsFeedItems().then(function(b){if(!b.success||null==b||null==b.data)throw"Returned null items";a.newsFeed.items.push.apply(a.newsFeed.items,b.data.data)})},d(),a.$on("newStatusUpdatePosted",function(){a.newsFeed.getNewsFeedItems()})}]),angular.module("NewsFeed").service("newsFeedDataService",["$http",function(a){this.getNewsFeedItems=function(b){var c={method:"GET",url:"api/newsfeed/items/"+b},d=function(a){return{success:!0,data:a.data}},e=function(a){return{success:!1,data:a.data}};return a(c).then(d,e)},this.postStatusUpdate=function(b){var c={method:"POST",url:"api/newsfeed/item",data:b},d=function(a){return{success:!0,data:a.data}},e=function(a){return{success:!1,data:a.data}};return a(c).then(d,e)}}]),angular.module("NewsFeed").controller("NewsFeedItemController",["$scope",function(a){a.newsFeedItem=a.newsFeedItem||{}}]),angular.module("NewsFeed").directive("newsFeedItem",[function(){return{restrict:"E",replace:"true",scope:{details:"=ngModel"},templateUrl:"app/newsFeed/directives/partials/newsFeedItem.tpl.html",controller:"NewsFeedItemController",link:function(a,b,c){a.newsFeedItem=a.newsFeedItem||{},a.$watch("details",function(b,c){a.newsFeedItem.details=b})}}}]),angular.module("NewsFeed").constant("NEWS_FEED_TYPES",{TEXT:0,IMAGE:1,VIDEO:2}),angular.module("SideMenu").controller("SideMenuController",["$scope",function(a){a.sideMenu={items:[{name:"News Feed",sref:"NewsFeed",selected:!1},{name:"Friends List",sref:"FriendsList",selected:!1}]},a.$on("$stateChangeSuccess",function(b,c){_.each(a.sideMenu.items,function(a){a.selected=a.sref===c.name})})}]),angular.module("Widgets").controller("UserStatusWidgetController",["$scope","$window","newsFeedDataService","NEWS_FEED_TYPES",function(a,b,c,d){a.userStatusWidget={statusText:""},a.userStatusWidget.setForm=function(b){a.userStatusWidget.form=b},a.userStatusWidget.clear=function(){a.userStatusWidget.statusText=""},a.userStatusWidget.submit=function(){var e={type:d.TEXT,user:b.currentUser,text:a.userStatusWidget.statusText,createDT:new Date};c.postStatusUpdate(e).then(function(b){if(!b.success)throw"Error posting status";a.userStatusWidget.clear(),a.$broadcast("newStatusUpdatePosted")})}}]),angular.module("NewsFeed").directive("userStatusWidget",[function(){return{restrict:"E",replace:"true",templateUrl:"app/widgets/directives/partials/userStatusWidget.tpl.html",controller:"UserStatusWidgetController"}}]),angular.module("AppUsers").controller("FriendsListController",["$scope","$window","appUserDataService",function(a,b,c){function d(){a.friendsList.populateFriends()}a.friendsList={},a.friendsList.populateFriends=function(){if(!(null!=b.currentUser&null!=b.currentUser._id))throw"Current user is null";c.getFriendsList(b.currentUser._id).then(function(b){if(!b.success||null==b||null==b.data||null==b.data.data)throw"Error retrieving friends list";a.friendsList.items=b.data.data})},b.currentUser&&d(),a.$on("currentUserSet",function(a,c){if(null==c)throw"Current user null";b.currentUser=c,d()})}]),angular.module("AppUsers").service("appUserDataService",["$http",function(a){this.getCurrentUser=function(){var b={method:"GET",url:"api/users/current"},c=function(a){return{success:!0,data:a.data}},d=function(a){return{success:!1,data:a.data}};return a(b).then(c,d)},this.getFriendsList=function(b){var c={method:"GET",url:"api/users/friends/"+b},d=function(a){return{success:!0,data:a.data}},e=function(a){return{success:!1,data:a.data}};return a(c).then(d,e)}}]),angular.module("AppUsers").controller("UserInfoCardController",["$scope",function(a){a.userInfoCard=a.userInfoCard||{}}]),angular.module("AppUsers").directive("userInfoCard",[function(){return{restrict:"E",replace:"true",scope:{details:"=ngModel"},templateUrl:"app/users/directives/partials/userInfoCard.tpl.html",controller:"UserInfoCardController",link:function(a,b,c){a.userInfoCard=a.userInfoCard||{},a.$watch("details",function(b,c){a.userInfoCard.details=b})}}}]);